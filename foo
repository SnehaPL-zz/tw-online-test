401
{ server: 'Cowboy',
  connection: 'close',
  'cache-control':
   'no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0',
  'x-dns-prefetch-control': 'off',
  'x-frame-options': 'SAMEORIGIN',
  'strict-transport-security': 'max-age=15552000; includeSubDomains',
  'x-download-options': 'noopen',
  'x-content-type-options': 'nosniff',
  'x-xss-protection': '1; mode=block',
  'content-security-policy': "default-src 'self'",
  'x-content-security-policy': "default-src 'self'",
  'x-webkit-csp': "default-src 'self'",
  'access-control-allow-origin': '*',
  'content-type': 'application/json; charset=utf-8',
  'content-length': '27',
  etag: 'W/"1b-T58G7qFuBE2EmmE6iYwzQX7kdz4"',
  'set-cookie':
   [ 'connect.sid=s%3ASJuFCDSwUAyaB0mo2NGVFkAa5-rwVZFi.U6pAJYIdy6tuaV1sTWuWJM2UAwOTkWBCCcoihSvlCgQ; Path=/; HttpOnly' ],
  date: 'Fri, 17 May 2019 13:27:40 GMT',
  via: '1.1 vegur' }
IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     paused: true,
     emitClose: true,
     autoDestroy: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  _events:
   [Object: null prototype] {
     end: [ [Function: responseOnEnd], [Function], [Function] ],
     close: [Function] },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket:
   TLSSocket {
     _tlsOptions:
      { pipe: false,
        secureContext: [SecureContext],
        isServer: false,
        requestCert: true,
        rejectUnauthorized: true,
        session: undefined,
        ALPNProtocols: undefined,
        requestOCSP: undefined },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'http-hunt.thoughtworks-labs.net',
     alpnProtocol: false,
     authorized: true,
     authorizationError: null,
     encrypted: true,
     _events:
      [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onConnectSecure],
        session: [Function],
        free: [Function: onFree],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _eventsCount: 9,
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: 'http-hunt.thoughtworks-labs.net',
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: undefined,
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     _requestCert: true,
     _rejectUnauthorized: true,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': null,
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: [ClientRequest],
        maxHeaderPairs: 2000,
        _consumed: false,
        onIncoming: [Function: parserOnIncomingClient],
        [Symbol(isReused)]: false },
     _httpMessage:
      ClientRequest {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header:
         'GET /challenge/input HTTP/1.1\r\nhost: http-hunt.thoughtworks-labs.net\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/challenge/input',
        _ended: false,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     [Symbol(asyncId)]: 4,
     [Symbol(kHandle)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(connect-options)]:
      { rejectUnauthorized: true,
        ciphers:
         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
        checkServerIdentity: [Function: checkServerIdentity],
        minDHSize: 1024,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        uri: [Url],
        method: 'GET',
        readable: true,
        writable: true,
        explicitMethod: true,
        _qs: [Querystring],
        _auth: [Auth],
        _oauth: [OAuth],
        _multipart: [Multipart],
        _redirect: [Redirect],
        _tunnel: [Tunnel],
        headers: {},
        setHeader: [Function],
        hasHeader: [Function],
        getHeader: [Function],
        removeHeader: [Function],
        localAddress: undefined,
        pool: {},
        dests: [],
        __isRequestRequest: true,
        proxy: null,
        tunnel: true,
        setHost: true,
        originalCookieHeader: undefined,
        _disableCookies: true,
        _jar: undefined,
        port: 443,
        host: 'http-hunt.thoughtworks-labs.net',
        path: null,
        httpModule: [Object],
        agentClass: [Function: Agent],
        agent: [Agent],
        _started: true,
        href: 'https://http-hunt.thoughtworks-labs.net/challenge/input',
        _defaultAgent: [Agent],
        servername: 'http-hunt.thoughtworks-labs.net',
        _agentKey: 'http-hunt.thoughtworks-labs.net:443::::::::::::::::::',
        encoding: null,
        singleUse: true } },
  connection:
   TLSSocket {
     _tlsOptions:
      { pipe: false,
        secureContext: [SecureContext],
        isServer: false,
        requestCert: true,
        rejectUnauthorized: true,
        session: undefined,
        ALPNProtocols: undefined,
        requestOCSP: undefined },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'http-hunt.thoughtworks-labs.net',
     alpnProtocol: false,
     authorized: true,
     authorizationError: null,
     encrypted: true,
     _events:
      [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onConnectSecure],
        session: [Function],
        free: [Function: onFree],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _eventsCount: 9,
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: 'http-hunt.thoughtworks-labs.net',
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: undefined,
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     _requestCert: true,
     _rejectUnauthorized: true,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': null,
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: [ClientRequest],
        maxHeaderPairs: 2000,
        _consumed: false,
        onIncoming: [Function: parserOnIncomingClient],
        [Symbol(isReused)]: false },
     _httpMessage:
      ClientRequest {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header:
         'GET /challenge/input HTTP/1.1\r\nhost: http-hunt.thoughtworks-labs.net\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/challenge/input',
        _ended: false,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     [Symbol(asyncId)]: 4,
     [Symbol(kHandle)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(connect-options)]:
      { rejectUnauthorized: true,
        ciphers:
         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
        checkServerIdentity: [Function: checkServerIdentity],
        minDHSize: 1024,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        uri: [Url],
        method: 'GET',
        readable: true,
        writable: true,
        explicitMethod: true,
        _qs: [Querystring],
        _auth: [Auth],
        _oauth: [OAuth],
        _multipart: [Multipart],
        _redirect: [Redirect],
        _tunnel: [Tunnel],
        headers: {},
        setHeader: [Function],
        hasHeader: [Function],
        getHeader: [Function],
        removeHeader: [Function],
        localAddress: undefined,
        pool: {},
        dests: [],
        __isRequestRequest: true,
        proxy: null,
        tunnel: true,
        setHost: true,
        originalCookieHeader: undefined,
        _disableCookies: true,
        _jar: undefined,
        port: 443,
        host: 'http-hunt.thoughtworks-labs.net',
        path: null,
        httpModule: [Object],
        agentClass: [Function: Agent],
        agent: [Agent],
        _started: true,
        href: 'https://http-hunt.thoughtworks-labs.net/challenge/input',
        _defaultAgent: [Agent],
        servername: 'http-hunt.thoughtworks-labs.net',
        _agentKey: 'http-hunt.thoughtworks-labs.net:443::::::::::::::::::',
        encoding: null,
        singleUse: true } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers:
   { server: 'Cowboy',
     connection: 'close',
     'cache-control':
      'no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0',
     'x-dns-prefetch-control': 'off',
     'x-frame-options': 'SAMEORIGIN',
     'strict-transport-security': 'max-age=15552000; includeSubDomains',
     'x-download-options': 'noopen',
     'x-content-type-options': 'nosniff',
     'x-xss-protection': '1; mode=block',
     'content-security-policy': "default-src 'self'",
     'x-content-security-policy': "default-src 'self'",
     'x-webkit-csp': "default-src 'self'",
     'access-control-allow-origin': '*',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '27',
     etag: 'W/"1b-T58G7qFuBE2EmmE6iYwzQX7kdz4"',
     'set-cookie':
      [ 'connect.sid=s%3ASJuFCDSwUAyaB0mo2NGVFkAa5-rwVZFi.U6pAJYIdy6tuaV1sTWuWJM2UAwOTkWBCCcoihSvlCgQ; Path=/; HttpOnly' ],
     date: 'Fri, 17 May 2019 13:27:40 GMT',
     via: '1.1 vegur' },
  rawHeaders:
   [ 'Server',
     'Cowboy',
     'Connection',
     'close',
     'Cache-Control',
     'no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0',
     'X-Dns-Prefetch-Control',
     'off',
     'X-Frame-Options',
     'SAMEORIGIN',
     'Strict-Transport-Security',
     'max-age=15552000; includeSubDomains',
     'X-Download-Options',
     'noopen',
     'X-Content-Type-Options',
     'nosniff',
     'X-Xss-Protection',
     '1; mode=block',
     'Content-Security-Policy',
     "default-src 'self'",
     'X-Content-Security-Policy',
     "default-src 'self'",
     'X-Webkit-Csp',
     "default-src 'self'",
     'Access-Control-Allow-Origin',
     '*',
     'Content-Type',
     'application/json; charset=utf-8',
     'Content-Length',
     '27',
     'Etag',
     'W/"1b-T58G7qFuBE2EmmE6iYwzQX7kdz4"',
     'Set-Cookie',
     'connect.sid=s%3ASJuFCDSwUAyaB0mo2NGVFkAa5-rwVZFi.U6pAJYIdy6tuaV1sTWuWJM2UAwOTkWBCCcoihSvlCgQ; Path=/; HttpOnly',
     'Date',
     'Fri, 17 May 2019 13:27:40 GMT',
     'Via',
     '1.1 vegur' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '',
  method: null,
  statusCode: 401,
  statusMessage: 'Unauthorized',
  client:
   TLSSocket {
     _tlsOptions:
      { pipe: false,
        secureContext: [SecureContext],
        isServer: false,
        requestCert: true,
        rejectUnauthorized: true,
        session: undefined,
        ALPNProtocols: undefined,
        requestOCSP: undefined },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: null,
     servername: 'http-hunt.thoughtworks-labs.net',
     alpnProtocol: false,
     authorized: true,
     authorizationError: null,
     encrypted: true,
     _events:
      [Object: null prototype] {
        close: [Array],
        end: [Array],
        secure: [Function: onConnectSecure],
        session: [Function],
        free: [Function: onFree],
        agentRemove: [Function: onRemove],
        drain: [Function: ondrain],
        error: [Function: socketErrorListener],
        data: [Function: socketOnData] },
     _eventsCount: 9,
     connecting: false,
     _hadError: false,
     _parent: null,
     _host: 'http-hunt.thoughtworks-labs.net',
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: false,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: false,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: undefined,
     _server: null,
     ssl:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     _requestCert: true,
     _rejectUnauthorized: true,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': null,
        _headers: [],
        _url: '',
        socket: [Circular],
        incoming: [Circular],
        outgoing: [ClientRequest],
        maxHeaderPairs: 2000,
        _consumed: false,
        onIncoming: [Function: parserOnIncomingClient],
        [Symbol(isReused)]: false },
     _httpMessage:
      ClientRequest {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Circular],
        connection: [Circular],
        _header:
         'GET /challenge/input HTTP/1.1\r\nhost: http-hunt.thoughtworks-labs.net\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/challenge/input',
        _ended: false,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(res)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     [Symbol(asyncId)]: 4,
     [Symbol(kHandle)]:
      TLSWrap {
        _parent: [TCP],
        _parentWrap: undefined,
        _secureContext: [SecureContext],
        reading: true,
        onhandshakestart: [Function: noop],
        onhandshakedone: [Function: bound ],
        onocspresponse: [Function: onocspresponse],
        onnewsession: [Function: onnewsessionclient],
        onerror: [Function: onerror],
        [Symbol(owner)]: [Circular] },
     [Symbol(lastWriteQueueSize)]: 0,
     [Symbol(timeout)]: null,
     [Symbol(kBytesRead)]: 0,
     [Symbol(kBytesWritten)]: 0,
     [Symbol(connect-options)]:
      { rejectUnauthorized: true,
        ciphers:
         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
        checkServerIdentity: [Function: checkServerIdentity],
        minDHSize: 1024,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        uri: [Url],
        method: 'GET',
        readable: true,
        writable: true,
        explicitMethod: true,
        _qs: [Querystring],
        _auth: [Auth],
        _oauth: [OAuth],
        _multipart: [Multipart],
        _redirect: [Redirect],
        _tunnel: [Tunnel],
        headers: {},
        setHeader: [Function],
        hasHeader: [Function],
        getHeader: [Function],
        removeHeader: [Function],
        localAddress: undefined,
        pool: {},
        dests: [],
        __isRequestRequest: true,
        proxy: null,
        tunnel: true,
        setHost: true,
        originalCookieHeader: undefined,
        _disableCookies: true,
        _jar: undefined,
        port: 443,
        host: 'http-hunt.thoughtworks-labs.net',
        path: null,
        httpModule: [Object],
        agentClass: [Function: Agent],
        agent: [Agent],
        _started: true,
        href: 'https://http-hunt.thoughtworks-labs.net/challenge/input',
        _defaultAgent: [Agent],
        servername: 'http-hunt.thoughtworks-labs.net',
        _agentKey: 'http-hunt.thoughtworks-labs.net:443::::::::::::::::::',
        encoding: null,
        singleUse: true } },
  _consuming: false,
  _dumped: false,
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        socket: [Function],
        response: [Function: bound ],
        error: [Function: bound ],
        drain: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 5,
     _maxListeners: undefined,
     outputData: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'http-hunt.thoughtworks-labs.net',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'http-hunt.thoughtworks-labs.net',
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: [TLSWrap],
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: [HTTPParser],
        _httpMessage: [Circular],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 4,
        [Symbol(kHandle)]: [TLSWrap],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: [Object] },
     connection:
      TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        servername: 'http-hunt.thoughtworks-labs.net',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object],
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'http-hunt.thoughtworks-labs.net',
        _readableState: [ReadableState],
        readable: true,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: true,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: [TLSWrap],
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: [HTTPParser],
        _httpMessage: [Circular],
        [Symbol(res)]: [TLSWrap],
        [Symbol(asyncId)]: 4,
        [Symbol(kHandle)]: [TLSWrap],
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: [Object] },
     _header:
      'GET /challenge/input HTTP/1.1\r\nhost: http-hunt.thoughtworks-labs.net\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        maxCachedSessions: 100,
        _sessionCache: [Object] },
     socketPath: undefined,
     timeout: undefined,
     method: 'GET',
     path: '/challenge/input',
     _ended: false,
     res: [Circular],
     aborted: false,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': null,
        _headers: [],
        _url: '',
        socket: [TLSSocket],
        incoming: [Circular],
        outgoing: [Circular],
        maxHeaderPairs: 2000,
        _consumed: false,
        onIncoming: [Function: parserOnIncomingClient],
        [Symbol(isReused)]: false },
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]: [Object: null prototype] { host: [Array] } },
  request:
   Request {
     _events:
      [Object: null prototype] { pipe: [Function], response: [Function] },
     _eventsCount: 2,
     _maxListeners: undefined,
     uri:
      Url {
        protocol: 'https:',
        slashes: true,
        auth: null,
        host: 'http-hunt.thoughtworks-labs.net',
        port: 443,
        hostname: 'http-hunt.thoughtworks-labs.net',
        hash: null,
        search: null,
        query: null,
        pathname: '/challenge/input',
        path: '/challenge/input',
        href: 'https://http-hunt.thoughtworks-labs.net/challenge/input' },
     method: 'GET',
     readable: true,
     writable: true,
     explicitMethod: true,
     _qs:
      Querystring {
        request: [Circular],
        lib: [Object],
        useQuerystring: undefined,
        parseOptions: {},
        stringifyOptions: {} },
     _auth:
      Auth {
        request: [Circular],
        hasAuth: false,
        sentAuth: false,
        bearerToken: null,
        user: null,
        pass: null },
     _oauth: OAuth { request: [Circular], params: null },
     _multipart:
      Multipart {
        request: [Circular],
        boundary: '7a331330-456c-4504-923b-2f7be05e5178',
        chunked: false,
        body: null },
     _redirect:
      Redirect {
        request: [Circular],
        followRedirect: true,
        followRedirects: true,
        followAllRedirects: false,
        followOriginalHttpMethod: false,
        allowRedirect: [Function],
        maxRedirects: 10,
        redirects: [],
        redirectsFollowed: 0,
        removeRefererHeader: false },
     _tunnel:
      Tunnel {
        request: [Circular],
        proxyHeaderWhiteList: [Array],
        proxyHeaderExclusiveList: [] },
     headers: {},
     setHeader: [Function],
     hasHeader: [Function],
     getHeader: [Function],
     removeHeader: [Function],
     localAddress: undefined,
     pool: {},
     dests: [],
     __isRequestRequest: true,
     proxy: null,
     tunnel: true,
     setHost: true,
     originalCookieHeader: undefined,
     _disableCookies: true,
     _jar: undefined,
     port: 443,
     host: 'http-hunt.thoughtworks-labs.net',
     path: '/challenge/input',
     httpModule:
      { Agent: [Function: Agent],
        globalAgent: [Agent],
        Server: [Function: Server],
        createServer: [Function: createServer],
        get: [Function: get],
        request: [Function: request] },
     agentClass: [Function: Agent],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        maxCachedSessions: 100,
        _sessionCache: [Object] },
     _started: true,
     href: 'https://http-hunt.thoughtworks-labs.net/challenge/input',
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        outputData: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [TLSSocket],
        connection: [TLSSocket],
        _header:
         'GET /challenge/input HTTP/1.1\r\nhost: http-hunt.thoughtworks-labs.net\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'GET',
        path: '/challenge/input',
        _ended: false,
        res: [Circular],
        aborted: false,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: [HTTPParser],
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     ntick: true,
     response: [Circular],
     originalHost: 'http-hunt.thoughtworks-labs.net',
     originalHostHeaderName: 'host',
     responseContent: [Circular] },
  toJSON: [Function: responseToJSON],
  caseless:
   Caseless {
     dict:
      { server: 'Cowboy',
        connection: 'close',
        'cache-control':
         'no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0',
        'x-dns-prefetch-control': 'off',
        'x-frame-options': 'SAMEORIGIN',
        'strict-transport-security': 'max-age=15552000; includeSubDomains',
        'x-download-options': 'noopen',
        'x-content-type-options': 'nosniff',
        'x-xss-protection': '1; mode=block',
        'content-security-policy': "default-src 'self'",
        'x-content-security-policy': "default-src 'self'",
        'x-webkit-csp': "default-src 'self'",
        'access-control-allow-origin': '*',
        'content-type': 'application/json; charset=utf-8',
        'content-length': '27',
        etag: 'W/"1b-T58G7qFuBE2EmmE6iYwzQX7kdz4"',
        'set-cookie': [Array],
        date: 'Fri, 17 May 2019 13:27:40 GMT',
        via: '1.1 vegur' } } }
